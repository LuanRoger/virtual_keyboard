import 'package:win32/win32.dart';
import 'package:virtual_keyboard/src/enums/keyboard_key.dart';

class KeyboardKeyBitmaskConverter {
  static int? convertKeyboardKey(KeyboardKey keyCode) {
    switch (keyCode) {
      case KeyboardKey.A:
        return 65;
      case KeyboardKey.ADD:
        return VK_ADD;
      case KeyboardKey.ALT:
        return VK_MENU;
      case KeyboardKey.APPS:
        return VK_APPS;
      case KeyboardKey.ATTN:
        return 246; //VK_ATTN
      case KeyboardKey.B:
        return 66;
      case KeyboardKey.BACKSPACE:
        return VK_BACK;
      case KeyboardKey.BROWSER_BACK:
        return VK_BROWSER_BACK;
      case KeyboardKey.BROWSER_FAVORITES:
        return VK_BROWSER_FAVORITES;
      case KeyboardKey.BROWSER_FORAWRD:
        return VK_BROWSER_FORWARD;
      case KeyboardKey.BROWSER_HOME:
        return VK_BROWSER_HOME;
      case KeyboardKey.BROWSER_REFRESH:
        return VK_BROWSER_REFRESH;
      case KeyboardKey.BROWSER_SEARCH:
        return VK_BROWSER_SEARCH;
      case KeyboardKey.BROWSER_STOP:
        return VK_BROWSER_STOP;
      case KeyboardKey.C:
        return 67;
      case KeyboardKey.CANCEL:
        return VK_CANCEL;
      case KeyboardKey.CAPS_LOCK:
        return VK_CAPITAL;
      case KeyboardKey.CONTROL:
        return VK_CONTROL;
      case KeyboardKey.CRSEL:
        return 247; // VK_CRSEL
      case KeyboardKey.D:
        return 68;
      case KeyboardKey.D0:
        return VK_NUMPAD0;
      case KeyboardKey.D1:
        return VK_NUMPAD1;
      case KeyboardKey.D2:
        return VK_NUMPAD2;
      case KeyboardKey.D3:
        return VK_NUMPAD3;
      case KeyboardKey.D4:
        return VK_NUMPAD4;
      case KeyboardKey.D5:
        return VK_NUMPAD5;
      case KeyboardKey.D6:
        return VK_NUMPAD6;
      case KeyboardKey.D7:
        return VK_NUMPAD7;
      case KeyboardKey.D8:
        return VK_NUMPAD8;
      case KeyboardKey.D9:
        return VK_NUMPAD9;
      case KeyboardKey.DECIMAL:
        return VK_DECIMAL;
      case KeyboardKey.DELETE:
        return VK_DELETE;
      case KeyboardKey.DIVIDE:
        return VK_DIVIDE;
      case KeyboardKey.DOWN_ARROW:
        return VK_DOWN;
      case KeyboardKey.E:
        return 69;
      case KeyboardKey.END:
        return VK_END;
      case KeyboardKey.ENTER:
        return VK_RETURN;
      case KeyboardKey.ERASE_EOF:
        return 249; //VK_EREOF
      case KeyboardKey.ESCAPE:
        return VK_ESCAPE;
      case KeyboardKey.EXECUTE:
        return VK_EXECUTE;
      case KeyboardKey.EXSEL:
        return 248; //VK_EXSEL
      case KeyboardKey.F:
        return 70;
      case KeyboardKey.F1:
        return VK_F1;
      case KeyboardKey.F2:
        return VK_F2;
      case KeyboardKey.F3:
        return VK_F3;
      case KeyboardKey.F4:
        return VK_F4;
      case KeyboardKey.F5:
        return VK_F5;
      case KeyboardKey.F6:
        return VK_F5;
      case KeyboardKey.F7:
        return VK_F7;
      case KeyboardKey.F8:
        return VK_F8;
      case KeyboardKey.F9:
        return VK_F9;
      case KeyboardKey.F10:
        return VK_F10;
      case KeyboardKey.F11:
        return VK_F11;
      case KeyboardKey.F12:
        return VK_F12;
      case KeyboardKey.F13:
        return VK_F13;
      case KeyboardKey.F14:
        return VK_F14;
      case KeyboardKey.F15:
        return VK_F15;
      case KeyboardKey.F16:
        return VK_F16;
      case KeyboardKey.F17:
        return VK_F17;
      case KeyboardKey.F18:
        return VK_F18;
      case KeyboardKey.F19:
        return VK_F19;
      case KeyboardKey.F20:
        return VK_F20;
      case KeyboardKey.F21:
        return VK_F21;
      case KeyboardKey.F22:
        return VK_F22;
      case KeyboardKey.F23:
        return VK_F23;
      case KeyboardKey.F24:
        return VK_F24;
      case KeyboardKey.G:
        return 71;
      case KeyboardKey.H:
        return 72;
      case KeyboardKey.HELP:
        return VK_HELP;
      case KeyboardKey.HOME:
        return VK_HOME;
      case KeyboardKey.I:
        return 73;
      case KeyboardKey.INSERT:
        return VK_INSERT;
      case KeyboardKey.J:
        return 74;
      case KeyboardKey.K:
        return 75;
      case KeyboardKey.L:
        return 76;
      case KeyboardKey.LAUNCH_APP_1:
        return VK_LAUNCH_APP1;
      case KeyboardKey.LAUNCH_APP_2:
        return VK_LAUNCH_APP2;
      case KeyboardKey.LAUNCH_MAIL:
        return VK_LAUNCH_MAIL;
      case KeyboardKey.L_CTRL:
        return VK_LCONTROL;
      case KeyboardKey.LEFT_ARROW:
        return VK_LEFT;
      case KeyboardKey.L_ALT:
        return VK_LMENU;
      case KeyboardKey.L_SHIFT:
        return VK_LSHIFT;
      case KeyboardKey.L_WIN:
        return VK_LWIN;
      case KeyboardKey.M:
        return 77;
      case KeyboardKey.MEDIA_NEXT_TRACK:
        return VK_MEDIA_NEXT_TRACK;
      case KeyboardKey.MEDIA_PLAY_PAUSE:
        return VK_MEDIA_PLAY_PAUSE;
      case KeyboardKey.MEDIA_PREVIOUS_TRACK:
        return VK_MEDIA_PREV_TRACK;
      case KeyboardKey.MEDIA_STOP:
        return VK_MEDIA_STOP;
      case KeyboardKey.MULTIPLY:
        return VK_MULTIPLY;
      case KeyboardKey.N:
        return 78;
      case KeyboardKey.NUM_LOCK:
        return VK_NUMLOCK;
      case KeyboardKey.NUM_PAD_0:
        return VK_NUMPAD0;
      case KeyboardKey.NUM_PAD_1:
        return VK_NUMPAD1;
      case KeyboardKey.NUM_PAD_2:
        return VK_NUMPAD2;
      case KeyboardKey.NUM_PAD_3:
        return VK_NUMPAD3;
      case KeyboardKey.NUM_PAD_4:
        return VK_NUMPAD4;
      case KeyboardKey.NUM_PAD_5:
        return VK_NUMPAD5;
      case KeyboardKey.NUM_PAD_6:
        return VK_NUMPAD6;
      case KeyboardKey.NUM_PAD_7:
        return VK_NUMPAD7;
      case KeyboardKey.NUM_PAD_8:
        return VK_NUMPAD8;
      case KeyboardKey.NUM_PAD_9:
        return VK_NUMPAD9;
      case KeyboardKey.O:
        return 79;
      case KeyboardKey.OEM_1:
        return VK_OEM_1;
      case KeyboardKey.OEM_2:
        return VK_OEM_2;
      case KeyboardKey.OEM_3:
        return VK_OEM_3;
      case KeyboardKey.OEM_4:
        return VK_OEM_4;
      case KeyboardKey.OEM_5:
        return VK_OEM_5;
      case KeyboardKey.OEM_6:
        return VK_OEM_6;
      case KeyboardKey.OEM_7:
        return VK_OEM_7;
      case KeyboardKey.OEM_8:
        return VK_OEM_8;
      case KeyboardKey.OEM_CLEAR:
        return 254; //VK_OEM_CLEAR
      case KeyboardKey.OEM_COMMA:
        return VK_OEM_COMMA;
      case KeyboardKey.OEM_MINUS:
        return VK_OEM_MINUS;
      case KeyboardKey.OEM_PERIOD:
        return VK_OEM_PERIOD;
      case KeyboardKey.OEM_PLUS:
        return VK_OEM_PLUS;
      case KeyboardKey.P:
        return 80;
      case KeyboardKey.PA_1:
        return 253; //VK_PA1
      case KeyboardKey.PAGE_DOWN:
        return VK_NEXT;
      case KeyboardKey.PAGE_UP:
        return VK_PRIOR;
      case KeyboardKey.PAUSE:
        return VK_PAUSE;
      case KeyboardKey.PLAY:
        return 250; // VK_PLAY
      case KeyboardKey.PRINT:
        return VK_PRINT;
      case KeyboardKey.PRINT_SCREEN:
        return VK_PRINT;
      case KeyboardKey.PROCESS_KEY:
        return VK_PROCESSKEY;
      case KeyboardKey.Q:
        return 81;
      case KeyboardKey.R:
        return 82;
      case KeyboardKey.R_CTRL:
        return VK_RCONTROL;
      case KeyboardKey.RETURN:
        return VK_RETURN;
      case KeyboardKey.RIGHT_ARROW:
        return VK_RIGHT;
      case KeyboardKey.R_ALT:
        return VK_RMENU;
      case KeyboardKey.R_SHIFT:
        return VK_RSHIFT;
      case KeyboardKey.R_WIN:
        return VK_RSHIFT;
      case KeyboardKey.S:
        return 83;
      case KeyboardKey.SCROLL_LOCK:
        return VK_SCROLL;
      case KeyboardKey.SELECT:
        return VK_SELECT;
      case KeyboardKey.SELECT_MEDIA:
        return VK_LAUNCH_MEDIA_SELECT;
      case KeyboardKey.SEPARATOR:
        return VK_SEPARATOR;
      case KeyboardKey.SHIFT:
        return VK_SHIFT;
      case KeyboardKey.SLEEP:
        return VK_SLEEP;
      case KeyboardKey.SPACE:
        return VK_SPACE;
      case KeyboardKey.SUBTRACT:
        return VK_SUBTRACT;
      case KeyboardKey.T:
        return 84;
      case KeyboardKey.TAB:
        return VK_TAB;
      case KeyboardKey.U:
        return 85;
      case KeyboardKey.UP_ARROW:
        return VK_UP;
      case KeyboardKey.V:
        return 86;
      case KeyboardKey.VOLUME_DOWN:
        return VK_UP;
      case KeyboardKey.VOLUME_MUTE:
        return VK_VOLUME_MUTE;
      case KeyboardKey.VOLUME_UP:
        return VK_VOLUME_UP;
      case KeyboardKey.W:
        return 87;
      case KeyboardKey.X:
        return 88;
      case KeyboardKey.Y:
        return 89;
      case KeyboardKey.Z:
        return 90;
      case KeyboardKey.ZOOM:
        return 251; // VK_ZOOM
      case KeyboardKey.VIRTUAL_KEY_ERROR:
      default:
        return null;
    }
  }
}
